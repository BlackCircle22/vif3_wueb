/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wueb;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.security.Key;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.spec.SecretKeySpec;

import javax.swing.JOptionPane;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;


/**
 *
 * @author aschoenf
 */
public class guiLOGIN extends javax.swing.JFrame { 
    
    
    
    
    public void encode( byte[] bytes, OutputStream out, String pass ) throws Exception  {
    Cipher c = Cipher.getInstance( "DES" );
    Key k = new SecretKeySpec( pass.getBytes(), "DES" );
    c.init( Cipher.ENCRYPT_MODE, k );

    OutputStream cos = new CipherOutputStream( out, c );
    cos.write( bytes );
    cos.close();
  }

    public byte[] decode( InputStream is, String pass ) throws Exception   {
    Cipher c = Cipher.getInstance( "DES" );
    Key k = new SecretKeySpec( pass.getBytes(), "DES" );
    c.init( Cipher.DECRYPT_MODE, k );

    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    CipherInputStream cis = new CipherInputStream( is, c );

    for (int b; ( b = cis.read() ) != -1;)
      bos.write( b );

    cis.close();
    return bos.toByteArray();
  }

  
  public String verschluesseln ( String textUnverschluesselt ) throws Exception   {
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    this.encode( textUnverschluesselt.getBytes(), out, "01234567" );
    String s = new BASE64Encoder().encode( out.toByteArray() );
    //System.out.println("verschluesselter Text: " +  s ); 
    return s;
  }
  
  public String entschluesseln ( String textVerschluesselt ) throws Exception   {
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    byte[] decode = new BASE64Decoder().decodeBuffer( textVerschluesselt );
    InputStream is = new ByteArrayInputStream( decode );
    String s = new String ( decode ( is, "01234567"));
    //System.out.println("entschlüsselter Text ist: " +  s );
    return s;
}
    
    
    
  
  
    
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    
  
    
    public guiLOGIN() {
        initComponents();
        //CsvBuch buch = new CsvBuch();
        //CsvKont kont = new CsvKont();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitel = new javax.swing.JLabel();
        lblBenutzname = new javax.swing.JLabel();
        lblPasswort = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        tfBenutzername = new javax.swing.JTextField();
        pwfPasswort = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        labelTitel.setText("Was über Bilanzen");

        lblBenutzname.setText("Benutzername:");

        lblPasswort.setText("Passwort:");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        tfBenutzername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBenutzernameActionPerformed(evt);
            }
        });

        pwfPasswort.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBenutzname)
                            .addComponent(lblPasswort))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfBenutzername)
                            .addComponent(pwfPasswort, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(btnLogin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(labelTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitel)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBenutzname)
                    .addComponent(tfBenutzername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPasswort)
                    .addComponent(pwfPasswort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(btnLogin)
                .addGap(104, 104, 104))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        
        String pfadInDasStammverzeichnis = new File("").getAbsolutePath();
        System.out.println(pfadInDasStammverzeichnis);
        File loginf = new File(pfadInDasStammverzeichnis + "/src/Login.txt");
        
        try {
            Scanner read = new Scanner(loginf);
            read.useDelimiter(",");
            boolean login = false;
            String passtemp = null;
            String usertemp;
            String user="";
            String pass= "";
            boolean abfUser = false;
            String str;
            String passGeheim;
           
        
            while (read.hasNext() && login != true) {
                usertemp = read.next();
                if (this.tfBenutzername.getText().equals(usertemp)) {
                    user = usertemp;
                    passGeheim = read.next();
  
                    passtemp =  this.entschluesseln(passGeheim);
                    //passtemp = read.next();
                    if (this.pwfPasswort.getText().equals(passtemp)) {
                        pass = passtemp;
                        abfUser = true;
                    } 
                    
                }
              //  read.next();
                if (user.equals(usertemp) && pass.equals(passtemp) && (abfUser = true)) {
                    login = true;
                    //break;
                    if (login == true) {
                        new guiWUEB(csvbu, csvko).setVisible(rootPaneCheckingEnabled);
                        dispose();
                        break;
                    }
                }
                else {
                    JOptionPane.showMessageDialog(null, "Incorrect username or password");
                    tfBenutzername.setText("");
                    pwfPasswort.setText("");
                    
                }
            }
           
           if (!read.hasNext() && (login == false)) {                                         
                        int eingabe = JOptionPane.showConfirmDialog(null, "Benutzer nicht vorhanden, wollen Sie einen anlegen?", "Benutzerabfrage", JOptionPane.YES_NO_OPTION);
                        switch (eingabe) {
                            case 0:

                                new guiBenutzer().setVisible(rootPaneCheckingEnabled);
                                dispose();
                                break;
                            case 1:
                                new guiLOGIN().setVisible(rootPaneCheckingEnabled);
                                break;
                            case 2:
                                System.exit(0);
                                break;
                            default:
                                
                                break;
                        }
                    }
           
           
           
           
        } catch (FileNotFoundException qwerty) {
            JOptionPane.showMessageDialog(null, "Can't find a text file");
        } catch (IOException ex) {
            Logger.getLogger(guiLOGIN.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(guiLOGIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void tfBenutzernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBenutzernameActionPerformed
        getContentPane().add(tfBenutzername, this.tfBenutzername);
    }//GEN-LAST:event_tfBenutzernameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guiLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guiLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guiLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guiLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guiLOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel labelTitel;
    private javax.swing.JLabel lblBenutzname;
    private javax.swing.JLabel lblPasswort;
    private javax.swing.JPasswordField pwfPasswort;
    private javax.swing.JTextField tfBenutzername;
    // End of variables declaration//GEN-END:variables

}
